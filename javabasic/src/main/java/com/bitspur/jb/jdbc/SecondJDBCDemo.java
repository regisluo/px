package com.bitspur.jb.jdbc;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;

import com.bitspur.jb.io.ResourceUtil;

public class SecondJDBCDemo {
	private static final String TABLE_BANK = "BANK";
	private static final String TABLE_BRANCH = "BRANCH";

	/*
	 * By default, only one ResultSet object per Statement object can be 
	 * open at the same time. Therefore, if the reading of one ResultSet 
	 * object is interleaved with the reading of another, each must have 
	 * been generated by different Statement objects. 
	 */
	public static void main(String[] args) {
		String createBank = "create table " + TABLE_BANK
				+ "(id varchar(11) NOT NULL, name varchar(30), abn varchar(30))";
		String createBranch = "create table " + TABLE_BRANCH
				+ "(id varchar(11) NOT NULL, name varchar(30), bankid varchar(30) NOT NULL)";

		Connection connection = null;
		Statement st = null;
		PreparedStatement pstmt = null;
		ResultSet rs1 = null;
		ResultSet rs2 = null;
		ResultSet rs3 = null;
		try {
			connection = DBUtil.getConnect();
			st = connection.createStatement();
			st.executeUpdate(createBank);
			st.executeUpdate(createBranch);

			String insertToBank = "insert into bank(id, name, abn) values('1','Commbank','12345678') ";
			String insertToBranch1 = "insert into branch(id, name, bankid) values ('1','branch1','1')";
			String insertToBranch2 = "insert into branch(id, name, bankid) values ('2','branch2','1')";

			st.executeUpdate(insertToBank);
			st.executeUpdate(insertToBranch1);
			st.executeUpdate(insertToBranch2);

			String searchBank = "select * from bank";
			String searchBranch = "select * from branch";
			rs1 = st.executeQuery(searchBank);
			while (rs1.next()) {
				System.out.println("bankId: " + rs1.getString("id") + ", bankName: " + rs1.getString("name")
						+ ", bankABN: " + rs1.getString("abn"));
			}
			rs2 = st.executeQuery(searchBranch);

			while (rs2.next()) {
				System.out.println("branchId: " + rs2.getString("id") + ", branchName: " + rs2.getString("name")
						+ ", belongs to bankId: " + rs2.getString("bankId"));
			}

			String pString = "update branch set name=? where id=?";
			pstmt = connection.prepareStatement(pString);
			pstmt.setString(1, "branch1-changed");
			pstmt.setString(2, "1");
			pstmt.executeUpdate();

			String searchBranch1 = "select * from branch where id='1'";

			rs3 = st.executeQuery(searchBranch1);

			while (rs3.next()) {
				System.out.println("branchId: " + rs3.getString("id") + ", branchName: " + rs3.getString("name")
						+ ", belongs to bankId: " + rs3.getString("bankId"));
			}

		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			ResourceUtil.close(rs1, rs2, rs3, st, pstmt, connection);
		}
	}
}
